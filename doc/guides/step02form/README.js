Ext.data.JsonP.step02form({"guide":"<h1 id='step02form-section-step.2-form-%E3%81%A7%E3%81%AE%E3%83%87%E3%83%BC%E3%82%BF%E3%83%90%E3%82%A4%E3%83%B3%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0'>Step.2 Form でのデータバインディング</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/step02form-section-edit-%E3%83%93%E3%83%A5%E3%83%BC%E3%81%AE%E4%BD%9C%E6%88%90'>Edit ビューの作成</a></li>\n<li><a href='#!/guide/step02form-section-edit-%E3%83%93%E3%83%A5%E3%83%BC%E3%81%AE-viewmodel-%E3%82%92%E4%BD%9C%E6%88%90'>Edit ビューの ViewModel を作成</a></li>\n<li><a href='#!/guide/step02form-section-main-%E3%83%93%E3%83%A5%E3%83%BC%E3%81%AB-edit-%E3%82%92%E8%BF%BD%E5%8A%A0'>Main ビューに Edit を追加</a></li>\n</ol>\n</div>\n\n<p>ここでは画面上にフォームを配置し、フォームフィールドと裏側にあるデータがバインドされる様子を確認します。</p>\n\n<p><p><img src=\"guides/step02form/memo.png\" alt=\"\" width=\"600\" height=\"677\"></p></p>\n\n<h2 id='step02form-section-edit-%E3%83%93%E3%83%A5%E3%83%BC%E3%81%AE%E4%BD%9C%E6%88%90'>Edit ビューの作成</h2>\n\n<p>フォームを使った Edit ビューを作成します。</p>\n\n<p><strong>app/view/edit/Edit.js</strong></p>\n\n<pre><code>Ext.define('MyList.view.edit.Edit',{\n    extend: 'Ext.form.Panel',\n    xtype: 'myedit',\n\n    requires: [\n        'Ext.form.field.Hidden'\n    ],\n\n    viewModel: 'edit',\n\n    bodyPadding: 12,\n\n    bind: {\n        title: '{title}'\n    },\n\n    defaults: {\n        fieldWidth: 100\n    },\n\n    items: [{\n        xtype: 'hidden',\n        name: 'id',\n        bind: '{rec.id}'\n    },{\n        xtype: 'textfield',\n        name: 'name',\n        bind: {\n            value: '{rec.name}',\n            fieldLabel: '{label.name}'\n        }\n    },{\n        xtype: 'textfield',\n        name: 'kana',\n        bind: {\n            value: '{rec.kana}',\n            fieldLabel: '{label.kana}'\n        }\n    },{\n        xtype: 'displayfield',\n        bind: {\n            value: '{namekana}',\n            fieldLabel: '{label.namekana}'\n        }\n    }]\n\n});\n</code></pre>\n\n<ul>\n<li><code>requires</code></li>\n<li><code>defaults</code></li>\n<li><code>items</code></li>\n<li><code>xtype</code></li>\n<li><code>bind</code></li>\n<li><code>textfield</code></li>\n<li><code>displayfield</code></li>\n</ul>\n\n\n<h2 id='step02form-section-edit-%E3%83%93%E3%83%A5%E3%83%BC%E3%81%AE-viewmodel-%E3%82%92%E4%BD%9C%E6%88%90'>Edit ビューの ViewModel を作成</h2>\n\n<p><strong>app/view/edit/EditModel.js</strong></p>\n\n<pre><code>Ext.define('MyList.view.edit.EditModel', {\n\n    extend: 'Ext.app.ViewModel',\n\n    alias: 'viewmodel.edit',\n\n    data: {\n        name: 'MyList',\n        rec: {\n            name: '中村久司',\n            kana: 'なかむらひさし'\n        }\n    },\n\n    formulas: {\n        namekana: function(get) {\n            var name = get('rec.name');\n                kana = get('rec.kana');\n            return name + ' (' + kana + ')';\n        }\n    }\n});\n</code></pre>\n\n<ul>\n<li><code>alias: 'viewmodel.foo'</code></li>\n<li><code>data</code></li>\n<li><code>formulas</code> と <code>get</code></li>\n</ul>\n\n\n<h2 id='step02form-section-main-%E3%83%93%E3%83%A5%E3%83%BC%E3%81%AB-edit-%E3%82%92%E8%BF%BD%E5%8A%A0'>Main ビューに Edit を追加</h2>\n\n<pre><code>requires: [\n    'MyList.view.edit.Edit'\n],\n</code></pre>\n\n<p>と</p>\n\n<pre><code>    items:[{\n        xtype: 'myedit'\n    },{\n        xtype: 'panel',\n        html: 'edit panel'\n    }]\n</code></pre>\n\n<ul>\n<li><code>requires</code></li>\n<li>本来は2枚目に置くのだけど、フォームの表示確認のため1枚目に</li>\n<li>watch していない場合は refresh</li>\n<li>ブラウザで表示</li>\n<li>フォームを修正すると、同時に <code>namekana</code> の <code>displayfield</code> が更新されることを確認。</li>\n</ul>\n\n","title":"Step.2 Form でのデータバインディング"});